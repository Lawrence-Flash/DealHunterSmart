// This file contains icon components used throughout the application
// Since we can't import directly from lucide-react or use SVG files, we'll create our own icon components

export function PriceTag3Fill(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="currentColor"
      {...props}
    >
      <path d="M10.9042 2.1C11.2641 1.96975 11.6485 1.97523 12.0044 2.11522C12.3603 2.25521 12.6611 2.52332 12.8542 2.87L13.4042 3.87C13.5071 4.06 13.6595 4.21486 13.8441 4.32128C14.0287 4.42771 14.2381 4.48144 14.4502 4.477L15.5992 4.455C15.9761 4.44953 16.3409 4.58375 16.6233 4.83034C16.9057 5.07693 17.0882 5.41746 17.1382 5.79L17.2842 6.93C17.3064 7.14068 17.383 7.342 17.5058 7.51183C17.6286 7.68166 17.7931 7.81347 17.9832 7.893L19.0352 8.293C19.3862 8.43344 19.6678 8.69524 19.8283 9.03111C19.9888 9.36699 20.0171 9.75207 19.9072 10.108L19.5822 11.195C19.5153 11.3903 19.5006 11.5988 19.5394 11.8005C19.5782 12.0022 19.6692 12.1905 19.8032 12.345L20.5742 13.271C20.8358 13.5815 20.9702 13.9769 20.9514 14.3793C20.9326 14.7817 20.762 15.1621 20.4722 15.444L19.5962 16.274C19.4473 16.415 19.3388 16.5943 19.282 16.7928C19.2251 16.9914 19.2219 17.2015 19.2722 17.402L19.6272 18.479C19.7457 18.8321 19.7259 19.2184 19.5712 19.5572C19.4165 19.8959 19.1385 20.1625 18.7902 20.309L17.7492 20.736C17.5623 20.8211 17.4022 20.9578 17.2846 21.1307C17.167 21.3035 17.0961 21.5061 17.0792 21.717L17.0002 22.865C16.9699 23.2432 16.8024 23.5962 16.5299 23.8558C16.2574 24.1154 15.8982 24.2644 15.5202 24.278L14.3722 24.324C14.1603 24.3333 13.9549 24.3966 13.7753 24.5079C13.5956 24.6192 13.4482 24.7745 13.3462 24.958L12.7662 25.944C12.5684 26.285 12.2623 26.5427 11.9018 26.6736C11.5414 26.8044 11.1513 26.7997 10.7942 26.66L9.76816 26.215C9.58127 26.1407 9.38052 26.1157 9.18271 26.1424C8.9849 26.1692 8.79623 26.2468 8.63516 26.369L7.66416 27.065C7.3444 27.3089 6.94574 27.4237 6.54696 27.3903C6.14818 27.3568 5.77516 27.1776 5.49716 26.886L4.65116 25.994C4.51314 25.8476 4.33842 25.7431 4.14438 25.691C3.95034 25.6389 3.74371 25.6414 3.55116 25.698L2.46116 26.052C2.1051 26.1574 1.72429 26.1239 1.39335 25.9577C1.0624 25.7914 0.806482 25.5047 0.671162 25.15L0.271162 24.087C0.196526 23.8936 0.0688632 23.7248 0.00379897 23.5524C-0.0612652 23.3801 -0.0433147 23.1777 0.0252615 22.968L0.331162 21.876C0.388943 21.6797 0.397472 21.4702 0.356088 21.2691C0.314703 21.068 0.22465 20.8813 0.0932615 20.729L-0.705738 19.832C-0.979159 19.5317 -1.12972 19.1408 -1.12513 18.7379C-1.12054 18.335 -0.962428 17.9483 -0.682737 17.654L0.156262 16.787C0.302622 16.6375 0.407253 16.4509 0.459538 16.2467C0.511823 16.0425 0.510216 15.8283 0.454763 15.625L0.0737625 14.557C-0.0425612 14.2044 -0.0217574 13.8199 0.133762 13.4828C0.289281 13.1457 0.567328 12.8806 0.915262 12.734L1.95126 12.291C2.1365 12.2021 2.29428 12.0628 2.40958 11.8886C2.52487 11.7144 2.59329 11.5112 2.60826 11.3L2.66826 10.148C2.69217 9.76819 2.85401 9.41152 3.12235 9.14903C3.39069 8.88654 3.74732 8.7316 4.12726 8.714L5.27626 8.663C5.48745 8.6525 5.69186 8.58857 5.8704 8.47713C6.04894 8.36569 6.19519 8.21066 6.29626 8.028L6.86526 7.036C7.06407 6.69325 7.37178 6.43487 7.73421 6.30509C8.09664 6.17531 8.48911 6.18166 8.84726 6.324L9.87126 6.773C10.0574 6.84771 10.2578 6.87362 10.4555 6.84781C10.6532 6.82201 10.842 6.74544 11.0033 6.624L11.9733 5.928C12.2931 5.68416 12.6917 5.56937 13.0904 5.60285C13.4892 5.63634 13.8623 5.81551 14.1403 6.107L14.9853 6.999C15.1233 7.14543 15.298 7.24993 15.492 7.30206C15.6861 7.35419 15.8927 7.35165 16.0853 7.295L17.1773 6.942C17.5317 6.83788 17.9103 6.87052 18.2396 7.03495C18.5689 7.19939 18.824 7.48322 18.9593 7.836L19.3603 8.899C19.4327 9.09285 19.5587 9.26251 19.7226 9.3862C19.8865 9.50989 20.0822 9.58293 20.2873 9.598L21.4383 9.653C21.8164 9.6768 22.1731 9.83863 22.4356 10.107C22.6981 10.3753 22.853 10.732 22.8703 11.11L22.9283 12.265C22.9377 12.4769 23.0016 12.6822 23.113 12.8617C23.2245 13.0412 23.3799 13.1886 23.5633 13.29L24.5503 13.87C24.8915 14.0672 25.1494 14.3732 25.2805 14.7337C25.4116 15.0942 25.4069 15.4843 25.2673 15.842L24.8173 16.865C24.7426 17.0521 24.7171 17.2529 24.7436 17.4509C24.7702 17.6489 24.8476 17.8377 24.9703 17.999L25.6693 18.969C25.914 19.2885 26.0298 19.687 25.9973 20.0859C25.9648 20.4849 25.7862 20.8583 25.4953 21.137L24.6023 21.983C24.4555 22.1212 24.3506 22.2963 24.2983 22.4907C24.2459 22.6851 24.2481 22.8921 24.3043 23.085L24.6583 24.175C24.764 24.531 24.7305 24.9118 24.5644 25.2428C24.3983 25.5737 24.1118 25.8297 23.7573 25.965L22.6923 26.365C22.4992 26.4405 22.3304 26.569 22.1981 26.7347C22.0659 26.9004 21.9747 27.0981 21.9333 27.31L21.6333 28.402C21.5491 28.7564 21.3275 29.0679 21.0165 29.2748C20.7055 29.4818 20.3274 29.569 19.9663 29.519L18.8293 29.348C18.6224 29.3198 18.412 29.346 18.2185 29.4243C18.025 29.5026 17.8553 29.6301 17.7273 29.793L17.0283 30.713C16.8232 31.0004 16.5183 31.2048 16.1757 31.2875C15.833 31.3701 15.473 31.3257 15.1603 31.162L14.1843 30.615C14.0012 30.5179 13.7977 30.4688 13.5923 30.4729C13.3869 30.477 13.1854 30.5341 13.0063 30.639L12.0593 31.229C11.7519 31.4098 11.3931 31.4766 11.0424 31.4184C10.6916 31.3603 10.3732 31.1808 10.1393 30.909L9.35026 30.007C9.22201 29.8612 9.05787 29.7522 8.87524 29.6908C8.69261 29.6294 8.496 29.6179 8.30726 29.657L7.20826 29.89C6.85328 29.9592 6.48565 29.8964 6.17335 29.7133C5.86105 29.5301 5.62669 29.239 5.51626 28.894L5.11826 27.831C5.05624 27.6365 4.94448 27.4614 4.79417 27.3235C4.64386 27.1856 4.46048 27.0894 4.26126 27.045L3.14826 26.774C2.79104 26.6844 2.47973 26.4679 2.26784 26.1661C2.05594 25.8643 1.95941 25.4986 1.99526 25.135L2.08326 23.989C2.09673 23.7772 2.05664 23.5655 1.96666 23.3718C1.87668 23.1781 1.73993 23.0088 1.56826 22.878L0.650262 22.159C0.351842 21.9205 0.147748 21.5876 0.0779283 21.2166C0.0081089 20.8457 0.0778398 20.4618 0.272239 20.139L0.867234 19.161C0.959249 18.9991 1.01079 18.8175 1.01736 18.631C1.02392 18.4446 0.985382 18.2594 0.906262 18.091L0.362262 17.111C0.203173 16.7949 0.162858 16.4327 0.248576 16.0887C0.334294 15.7447 0.539926 15.4404 0.829262 15.229L1.74926 14.509C1.88979 14.3934 1.99885 14.2448 2.07001 14.0759C2.14117 13.907 2.17228 13.7226 2.16026 13.538L2.09126 12.392C2.0662 12.0302 2.17191 11.6704 2.39148 11.3735C2.61104 11.0767 2.92902 10.8621 3.28926 10.764L4.33926 10.439C4.5314 10.3839 4.70821 10.283 4.85493 10.1445C5.00165 10.006 5.11408 9.83396 5.18226 9.643L5.52826 8.603C5.63802 8.25044 5.8664 7.94844 6.17683 7.74753C6.48726 7.54662 6.86 7.45779 7.23276 7.494L8.37226 7.605C8.55913 7.62183 8.74752 7.59302 8.9228 7.52132C9.09809 7.44962 9.25507 7.33694 9.38026 7.192L10.1243 6.297C10.3351 6.04824 10.6296 5.87594 10.9565 5.80946C11.2834 5.74298 11.6236 5.78612 11.9243 5.933L12.9053 6.467C13.0875 6.56403 13.2907 6.61347 13.4963 6.61102C13.702 6.60856 13.9039 6.55428 14.0843 6.451L15.0393 5.854C15.3418 5.67071 15.6968 5.5984 16.0458 5.64808C16.3947 5.69776 16.7128 5.87536 16.9503 6.145L17.7293 7.055C17.8583 7.19818 18.0216 7.30467 18.2026 7.36367C18.3837 7.42267 18.5776 7.43226 18.7633 7.391L19.8723 7.145C20.226 7.07046 20.5945 7.13057 20.9088 7.31194C21.223 7.49331 21.4602 7.78443 21.5743 8.129L21.9803 9.187C22.0484 9.37901 22.1641 9.5507 22.3165 9.68435C22.4689 9.818 22.6529 9.90903 22.8513 9.946L23.9673 10.202C24.3268 10.283 24.6414 10.4941 24.8572 10.7932C25.073 11.0923 25.1739 11.4584 25.1423 11.823L25.0433 12.97C25.0242 13.1819 25.0597 13.3944 25.1467 13.5886C25.2336 13.7827 25.3691 13.9522 25.5393 14.082L26.4573 14.801C26.7594 15.0351 26.9665 15.3664 27.0362 15.7372C27.1059 16.108 27.0334 16.4927 26.8343 16.815L26.2233 17.789C26.125 17.9502 26.0685 18.1324 26.0577 18.3203C26.0469 18.5082 26.0822 18.6957 26.1603 18.867L26.6933 19.853C26.8472 20.1713 26.883 20.5319 26.794 20.8736C26.7051 21.2153 26.4977 21.5168 26.2093 21.727L25.2893 22.447C25.1488 22.5627 25.0396 22.7113 24.9685 22.8802C24.8973 23.0491 24.8662 23.2336 24.8783 23.418L24.9483 24.564C24.9733 24.9258 24.8675 25.2857 24.648 25.5825C24.4284 25.8794 24.1104 26.094 23.7503 26.192L22.7003 26.517C22.5082 26.5715 22.3315 26.6718 22.1847 26.8098C22.038 26.9478 21.9254 27.1194 21.8573 27.31L21.5103 28.35C21.3979 28.7015 21.1689 29.0019 20.8591 29.2026C20.5493 29.4033 20.1778 29.4935 19.8053 29.4603L18.6673 29.35C18.4804 29.3331 18.292 29.3619 18.1167 29.4336C17.9414 29.5053 17.7845 29.618 17.6593 29.763L16.9153 30.658C16.7058 30.9094 16.4119 31.0834 16.0848 31.1508C15.7578 31.2181 15.4169 31.1749 15.1153 31.0273L14.1343 30.493C13.9521 30.396 13.7489 30.3465 13.5433 30.349C13.3376 30.3515 13.1358 30.4057 12.9553 30.509L12.0003 31.106C11.6979 31.2893 11.3428 31.3616 10.9939 31.3119C10.645 31.2622 10.3269 31.0846 10.0893 30.815L9.31026 29.905C9.17998 29.7627 9.01671 29.6563 8.83647 29.5958C8.65622 29.5353 8.46291 29.523 8.27626 29.561L7.16726 29.812C6.81301 29.8863 6.44407 29.8251 6.12997 29.6426C5.81587 29.4601 5.57977 29.1679 5.46726 28.822L5.06026 27.765C4.99219 27.573 4.87653 27.4013 4.72413 27.2676C4.57173 27.134 4.38773 27.043 4.18926 27.006L3.07526 26.749C2.71586 26.6682 2.40134 26.4573 2.18554 26.1584C1.96974 25.8596 1.86893 25.4935 1.90026 25.129L1.99926 23.981C2.01862 23.7691 1.98324 23.5566 1.89638 23.3624C1.80952 23.1682 1.67401 22.9988 1.50426 22.869L0.583263 22.15C0.281201 21.9159 0.0740882 21.5847 0.00437968 21.2138C-0.0653288 20.843 0.00713134 20.4582 0.206262 20.136L0.817262 19.162C0.915574 19.0008 0.972149 18.8186 0.982946 18.6307C0.993742 18.4428 0.958478 18.2552 0.880262 18.084L0.347262 17.098C0.193415 16.7796 0.157553 16.419 0.246566 16.0773C0.335579 15.7357 0.543 15.4342 0.831258 15.224L1.75126 14.504C1.89169 14.3883 2.00075 14.2398 2.07191 14.0709C2.14307 13.902 2.17418 13.7175 2.16216 13.533L2.09326 12.387C2.06892 12.0251 2.17508 11.6654 2.39473 11.3688C2.61439 11.0721 2.93217 10.8578 3.29216 10.76L4.34226 10.435C4.5344 10.3799 4.71121 10.279 4.85793 10.1405C5.00465 10.002 5.11708 9.82992 5.18526 9.639L5.53126 8.599C5.64155 8.2459 5.87081 7.94342 6.18242 7.74238C6.49403 7.54133 6.86813 7.45287 7.24126 7.49L8.38026 7.601C8.56713 7.61782 8.75553 7.58902 8.9308 7.51731C9.10608 7.44561 9.26307 7.33294 9.38826 7.188L10.1323 6.293C10.3427 6.04345 10.6372 5.87065 10.9645 5.80417C11.2918 5.73769 11.6324 5.78134 11.9323 5.929L12.9133 6.463C13.0955 6.56003 13.2987 6.60947 13.5044 6.60701C13.71 6.60456 13.9119 6.55028 14.0923 6.447L15.0473 5.85C15.35 5.66685 15.7051 5.59469 16.0541 5.64454C16.403 5.69438 16.721 5.87214 16.9583 6.142L17.7383 7.052C17.8666 7.19544 18.0295 7.30225 18.2104 7.36152C18.3912 7.42079 18.5849 7.43058 18.7703 7.389L19.8803 7.143C20.2336 7.0683 20.6018 7.12819 20.9159 7.3094C21.2299 7.49062 21.4671 7.78163 21.5812 8.12598L21.9873 9.184C22.0553 9.37601 22.171 9.5477 22.3234 9.68135C22.4759 9.815 22.6599 9.90603 22.8583 9.943L23.9743 10.199C24.3338 10.28 24.6484 10.4911 24.8642 10.7902C25.08 11.0893 25.1809 11.4554 25.1493 11.82L25.0503 12.967C25.0312 13.1789 25.0667 13.3914 25.1536 13.5856C25.2406 13.7797 25.3761 13.9492 25.5463 14.079L26.4653 14.798C26.7674 15.0321 26.9745 15.3634 27.0442 15.7342C27.1139 16.105 27.0414 16.4897 26.8423 16.812L26.2313 17.786C26.133 17.9472 26.0765 18.1294 26.0657 18.3173C26.0549 18.5052 26.0902 18.6927 26.1683 18.864L26.7013 19.85C26.8552 20.1683 26.891 20.5289 26.802 20.8706C26.7131 21.2123 26.5057 21.5138 26.2173 21.724L25.2973 22.444C25.1568 22.5597 25.0476 22.7083 24.9765 22.8772C24.9053 23.0461 24.8742 23.2306 24.8863 23.415L24.9563 24.561C24.9814 24.9235 24.8752 25.2838 24.6551 25.5809C24.435 25.878 24.1164 26.0926 23.7553 26.19L22.7063 26.514C22.5142 26.5685 22.3375 26.6688 22.1907 26.8068C22.044 26.9448 21.9314 27.1164 21.8633 27.307L21.5163 28.347C21.404 28.6985 21.175 28.9989 20.8652 29.1996C20.5554 29.4003 20.1839 29.4905 19.8113 29.4573L18.6733 29.347C18.4865 29.3299 18.2982 29.3584 18.1229 29.4296C17.9477 29.5008 17.7907 29.613 17.6653 29.758L16.9203 30.654C16.7121 30.9059 16.4191 31.0806 16.0928 31.1489C15.7664 31.2172 15.4258 31.1751 15.1243 31.0293L14.1433 30.496C13.9621 30.3988 13.7594 30.3491 13.5543 30.3514C13.3491 30.3537 13.1478 30.4078 12.9683 30.511L12.0123 31.108C11.7097 31.291 11.3543 31.3631 11.0053 31.3133C10.6562 31.2636 10.338 31.0859 10.1003 30.816L9.32016 29.904C9.18931 29.7627 9.0262 29.657 8.84635 29.5968C8.6665 29.5365 8.47359 29.5239 8.28726 29.561L7.17726 29.812C6.82318 29.8872 6.45423 29.8259 6.14024 29.6432C5.82625 29.4605 5.59021 29.168 5.47726 28.822L5.07126 27.765C5.00289 27.5734 4.88731 27.402 4.73525 27.2683C4.58319 27.1346 4.39962 27.0432 4.20126 27.005L3.08726 26.748C2.72768 26.6673 2.41301 26.4564 2.19709 26.1575C1.98117 25.8586 1.88027 25.4923 1.91126 25.128L2.01126 23.98C2.03071 23.7679 1.99533 23.5553 1.90841 23.3609C1.82149 23.1665 1.68588 22.9969 1.51526 22.867L0.594262 22.148C0.292158 21.9139 0.085044 21.5826 0.0153353 21.2118C-0.0543734 20.841 0.0180842 20.4562 0.217214 20.134L0.828214 19.16C0.926526 18.9988 0.983101 18.8166 0.993897 18.6287C1.00469 18.4408 0.969429 18.2532 0.891213 18.082L0.358213 17.096C0.201761 16.7782 0.163599 16.4167 0.251831 16.0739C0.340064 15.7311 0.548272 15.4288 0.838212 15.22L1.75826 14.5C1.89902 14.384 2.00819 14.2353 2.07939 14.0662C2.15059 13.8971 2.18156 13.7124 2.16916 13.528L2.09916 12.382C2.0753 12.0197 2.18221 11.6598 2.40254 11.3631C2.62288 11.0665 2.94129 10.8524 3.30126 10.755L4.35126 10.43C4.54374 10.3747 4.72086 10.2736 4.86781 10.1348C5.01477 9.996 5.12731 9.82367 5.19526 9.633L5.54126 8.593C5.65155 8.2399 5.88081 7.93742 6.19242 7.73638C6.50403 7.53534 6.87813 7.44687 7.25126 7.484L8.39026 7.595C8.57721 7.61222 8.76578 7.58365 8.94118 7.51197C9.11657 7.44029 9.27361 7.32747 9.39826 7.182L10.1423 6.287C10.3532 6.03801 10.6477 5.86566 10.9746 5.79917C11.3015 5.73267 11.6416 5.77588 11.9423 5.923L12.9233 6.457C13.1052 6.55433 13.3082 6.60397 13.5137 6.60152C13.7192 6.59906 13.9208 6.54458 14.1003 6.441L15.0553 5.844C15.3583 5.66159 15.7134 5.59021 16.0624 5.64076C16.4113 5.6913 16.7292 5.86973 16.9663 6.14L17.7463 7.05C17.8748 7.19245 18.0375 7.29856 18.2178 7.35752C18.3982 7.41647 18.5913 7.42641 18.7763 7.386L19.8853 7.14C20.2395 7.06489 20.6089 7.12529 20.9238 7.30736C21.2387 7.48944 21.4764 7.7816 21.5903 8.127L21.9963 9.185C22.0644 9.37701 22.18 9.5487 22.3325 9.68235C22.4849 9.816 22.6689 9.90703 22.8673 9.944L23.9833 10.2C24.3434 10.2806 24.6585 10.4917 24.8746 10.7909C25.0907 11.0902 25.1916 11.4565 25.1593 11.821L25.0603 12.968C25.0411 13.1809 25.0771 13.3945 25.1647 13.5896C25.2523 13.7847 25.3888 13.9549 25.5603 14.085L26.4763 14.803C26.7779 15.0388 26.984 15.3715 27.0523 15.7433C27.1206 16.1151 27.0461 16.5004 26.8453 16.823L26.2363 17.796C26.1378 17.9572 26.0813 18.1394 26.0705 18.3273C26.0597 18.5152 26.095 18.7027 26.1733 18.874L26.7073 19.86C26.8616 20.1796 26.8972 20.5416 26.8077 20.8845C26.7182 21.2274 26.5099 21.5297 26.2203 21.74L25.3003 22.46C25.1597 22.5757 25.0506 22.7243 24.9795 22.8932C24.9083 23.0621 24.8771 23.2466 24.8893 23.431L24.9593 24.577C24.9843 24.9384 24.8788 25.2979 24.6595 25.5948C24.4401 25.8917 24.1224 26.1066 23.7623 26.205L22.7133 26.53C22.521 26.5841 22.3442 26.684 22.1972 26.8215C22.0502 26.959 21.9372 27.1301 21.8683 27.32L21.5233 28.36C21.4107 28.7111 21.1809 29.0111 20.8704 29.2111C20.5599 29.4112 20.1879 29.5005 19.8153 29.466L18.6763 29.356C18.4906 29.3388 18.3034 29.3669 18.1289 29.4375C17.9545 29.5082 17.798 29.6198 17.6723 29.764L16.9273 30.66C16.7185 30.9119 16.4249 31.0865 16.0981 31.1543C15.7712 31.2221 15.4302 31.1792 15.1283 31.0323L14.1483 30.5C13.9665 30.4027 13.7633 30.3529 13.5573 30.3551C13.3513 30.3572 13.1493 30.4113 12.9693 30.5143L12.0143 31.111C11.7116 31.2939 11.3562 31.3659 11.0072 31.316C10.6581 31.2661 10.34 31.0882 10.1023 30.818L9.32226 29.907C9.19141 29.7658 9.0283 29.6601 8.84845 29.5999C8.6686 29.5396 8.47569 29.527 8.28936 29.564L7.17826 29.815C6.82418 29.8902 6.45523 29.8289 6.14124 29.6462C5.82725 29.4635 5.59121 29.171 5.47826 28.825L5.07126 27.768C5.00321 27.5769 4.88809 27.406 4.73651 27.2725C4.58493 27.139 4.40175 27.0475 4.20326 27.008L3.08926 26.751C2.72961 26.6706 2.41486 26.4598 2.19891 26.1609C1.98296 25.862 1.88208 25.4956 1.91326 25.131L2.01326 23.983C2.03272 23.7709 1.99733 23.5583 1.91041 23.3639C1.82349 23.1695 1.68788 22.9999 1.51726 22.87L0.596262 22.151C0.294158 21.9169 0.0870442 21.5856 0.0173355 21.2148C-0.0523733 20.844 0.0200868 20.4592 0.219213 20.137"
        />
    </svg>
  );
}

export function HeartLine(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M19.5 12.572L12 20l-7.5-7.428A5 5 0 1 1 12 6.006a5 5 0 1 1 7.5 6.572" />
    </svg>
  );
}

export function Notification3Line(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M10 5a2 2 0 1 1 4 0 7 7 0 0 1 4 6v3a4 4 0 0 0 2 3H4a4 4 0 0 0 2-3v-3a7 7 0 0 1 4-6" />
      <path d="M9 17v1a3 3 0 0 0 6 0v-1" />
    </svg>
  );
}

export function SearchLine(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <circle cx="11" cy="11" r="8" />
      <path d="m21 21-4.35-4.35" />
    </svg>
  );
}

export function Home5Line(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M19 8.71L5.04 8.71 12 3 19 8.71z" />
      <path d="M2 9.96L2 21h6.4v-6.22h7.2V21H22V9.96" />
    </svg>
  );
}

export function PriceTag3Line(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M7.859 10.942a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z" />
      <path d="M2 5v4.172c0 .53.211 1.039.586 1.414l10.828 10.828a2 2 0 0 0 2.828 0l6.172-6.172a2 2 0 0 0 0-2.828L11.586 1.586A2 2 0 0 0 10.172 1H6a4 4 0 0 0-4 4z" />
    </svg>
  );
}

export function UserLine(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2" />
      <circle cx="12" cy="7" r="4" />
    </svg>
  );
}

export function FacebookFill(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="currentColor"
      {...props}
    >
      <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z" />
    </svg>
  );
}

export function TwitterFill(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="currentColor"
      {...props}
    >
      <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z" />
    </svg>
  );
}

export function InstagramFill(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="currentColor"
      {...props}
    >
      <path d="M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.897 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.897-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z" />
    </svg>
  );
}

export function LinkedinFill(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="currentColor"
      {...props}
    >
      <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z" />
    </svg>
  );
}

export function SendPlaneFill(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="currentColor"
      {...props}
    >
      <path d="M1.946 9.315c-.522-.174-.527-.455.01-.634l19.087-6.362c.529-.176.832.12.684.638l-5.454 19.086c-.15.529-.455.547-.679.045L12 14l6-8-8 6-8.054-2.685z" />
    </svg>
  );
}

export function Scales3Line(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M12 3v18M5 7l2.5 2.5M19 7l-2.5 2.5M5 17h14M6 17l6-10 6 10" />
    </svg>
  );
}

export function MoneyDollarCircleLine(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <circle cx="12" cy="12" r="10" />
      <path d="M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8" />
      <path d="M12 18V6" />
    </svg>
  );
}

export function StarFill(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="currentColor"
      {...props}
    >
      <path d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z" />
    </svg>
  );
}

export function StarLine(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" />
    </svg>
  );
}

export function StarHalfFill(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="currentColor"
      {...props}
    >
      <path d="M12 2l2.34 7.2H22l-5.83 4.24 2.23 6.87L12 16.49V2z" />
      <path d="M12 16.49l-6.4 3.81 2.23-6.87L2 9.2h7.66L12 2v14.49z" fill="none" stroke="currentColor" strokeWidth="2" strokeLinejoin="round" />
    </svg>
  );
}

export function Store2Line(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M2 7h20M16 7v12H8V7" />
      <path d="M5 7l-1 3v10h16V10l-1-3" />
      <path d="M5 7V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v2" />
    </svg>
  );
}

export function AppleFill(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="currentColor"
      {...props}
    >
      <path d="M17.05 20.28c-.98.95-2.05.8-3.08.35-1.09-.46-2.09-.48-3.24 0-1.44.62-2.2.44-3.06-.35C2.79 15.25 3.51 7.59 9.05 7.31c1.35.07 2.29.74 3.08.8 1.18-.24 2.31-.93 3.57-.84 1.51.12 2.65.72 3.4 1.8-3.12 1.87-2.38 5.98.48 7.13-.57 1.5-1.31 2.99-2.53 4.08zM12.03 7.25c-.15-2.23 1.66-4.07 3.74-4.25.29 2.58-2.34 4.5-3.74 4.25z" />
    </svg>
  );
}

export function GooglePlayFill(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="currentColor"
      {...props}
    >
      <path d="M3.609 1.814L13.792 12 3.61 22.186a.996.996 0 0 1-.61-.92V2.734a1 1 0 0 1 .609-.92zm10.89 10.893l2.302 2.302-10.937 6.333 8.635-8.635zm3.199-3.198l2.807 1.626a1 1 0 0 1 0 1.73l-2.808 1.626L15.206 12l2.492-2.49zM5.864 2.658L16.802 8.99l-2.303 2.303-8.635-8.635z" />
    </svg>
  );
}

export function Filter3Line(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M4 18h16M4 14h10M4 6h16M4 10h10" />
    </svg>
  );
}

export function SortDesc(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <path d="M3 6h18M6 12h12M9 18h6" />
    </svg>
  );
}

export function ShareLine(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 24 24"
      width="24"
      height="24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
      {...props}
    >
      <circle cx="18" cy="5" r="3" />
      <circle cx="6" cy="12" r="3" />
      <circle cx="18" cy="19" r="3" />
      <line x1="8.59" y1="13.51" x2="15.42" y2="17.49" />
      <line x1="15.41" y1="6.51" x2="8.59" y2="10.49" />
    </svg>
  );
}
